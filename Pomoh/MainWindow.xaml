<Window xmlns:UserControls="clr-namespace:Pomoh.UserControls"  x:Class="Pomoh.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pomoh"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Background="#252526"
        WindowStyle="None"
        BorderThickness="0"
        AllowsTransparency="True"
        ResizeMode="CanMinimize"
        Loaded="Window_Loaded"
        x:Name="MainPomoWindow"
        SizeToContent="WidthAndHeight">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFE81123"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="TransparentWhiteGray" Color="#60FFFFFF"/>
        <Style x:Key="ExitButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid HorizontalAlignment="Center"
          VerticalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon x:Name="SysTrayIcon"
                        IconSource="/Assets/pomoh.ico"
                        ToolTipText="Pomoh!"
                        TrayMouseDoubleClick="TaskbarIcon_TrayMouseDoubleClick"/>
        <Grid x:Name="TitleGrid" 
              Grid.Row="0"
              Background="#05FFFFFF"
              MouseDown="TitleGrid_MouseDown" Cursor="SizeAll"/>
        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
            <Button Style="{DynamicResource MinimizeButtonStyle}" x:Name="MinimizeButton" 
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    BorderThickness="0"
                    Padding="10"
                    Click="MinimizeButton_Click">
                <Border Background="{StaticResource TransparentWhiteGray}"
                    Height="3"
                    Width="15"/>
            </Button>
            <Button x:Name="ExitButton"
                    Style="{DynamicResource ExitButtonStyle}"
                    Background="Transparent"
                    BorderThickness="0"
                    Padding="10"
                    Click="ExitButton_Click">
                <Grid>
                    <Border Background="{StaticResource TransparentWhiteGray}"
                    Height="3"
                    Width="15" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                    <Border Background="{StaticResource TransparentWhiteGray}"
                    Height="3"
                    Width="15" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="-45"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                </Grid>
            </Button>
        </StackPanel>

        <UserControls:DialMarkers Grid.Row="1"
                                  Margin="20"/>
        
        <Border x:Name="TimeDial"
                Grid.Row="1"
                Background="Gray"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Height="200"
                Width="200"
                CornerRadius="100" 
                RenderTransformOrigin="0.5,0.5"
                MouseDown="TimeDial_MouseDown"
                MouseUp="TimeDial_MouseUp"
                MouseLeave="TimeDial_MouseLeave"
                MouseMove="TimeDial_MouseMove">
            <Border.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="DialRotation"/>
                </TransformGroup>
            </Border.RenderTransform>
            <Grid>
                <Border Background="White"
                        Opacity="0.15"
                        Width="40"
                        Height="1"
                        HorizontalAlignment="Left"
                        CornerRadius="15,0,0,15"/>
                
                <Border Background="White"
                        Opacity="0.15"
                        Width="40"
                        Height="1"
                        HorizontalAlignment="Right"
                        CornerRadius="0,15,15,0"/>

                <Border Background="White"
                        Opacity="0.15"
                        Width="1"
                        Height="40"
                        VerticalAlignment="Bottom"
                        CornerRadius="0,0,15,15"/>

                <Border x:Name="TimeDialIndicator"
                    Grid.Row="1"
                    Background="DimGray"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Height="30"
                    Width="5"
                    CornerRadius="40,40,5,5"
                    Margin="0,5,0,0"/>
            </Grid>
        </Border>

        <Viewbox Grid.Row="1"
                 Width="110"
                 Height="100">
            <TextBlock x:Name="TimeTextBlock"
                       Foreground="DimGray"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       TextAlignment="Center"
                       InputScope="Number"
                       FontWeight="ExtraLight"
                       Background="Transparent"
                       Text="POMOH!"/>
        </Viewbox>
    </Grid>
</Window>
